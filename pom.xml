<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.marco</groupId>
	<artifactId>mybooking</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>mybooking</name>
	<description>Resource Booking</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.4.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
        		<exclusion>
            		<groupId>org.springframework.boot</groupId>
            		<artifactId>spring-boot-starter-tomcat</artifactId>
        		</exclusion>
    		</exclusions>
		</dependency>
		<dependency>
    		<groupId>org.springframework.boot</groupId>
    		<artifactId>spring-boot-starter-undertow</artifactId>
		</dependency>
		<dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-devtools</artifactId>
    	</dependency>
		<dependency>
  			<groupId>com.fasterxml.jackson.datatype</groupId>
  			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>
		<dependency>
    		<groupId>com.h2database</groupId>
    		<artifactId>h2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity4</artifactId>
		</dependency>
		<dependency>
    		<groupId>org.thymeleaf.extras</groupId>
    		<artifactId>thymeleaf-extras-java8time</artifactId>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.nekohtml</groupId>
			<artifactId>nekohtml</artifactId>
		</dependency>
		<dependency>
    		<groupId>net.ttddyy</groupId>
    		<artifactId>datasource-proxy</artifactId>
    		<version>1.4.1</version>
		</dependency>
		<!--  Hibernate Java8 Mapping -->
		<dependency>
    		<groupId>org.hibernate</groupId>
    		<artifactId>hibernate-java8</artifactId>
		</dependency>
		<!--  DB migration -->
		<dependency>
    		<groupId>org.flywaydb</groupId>
    		<artifactId>flyway-core</artifactId>
    		<version>4.1.0</version><!--$NO-MVN-MAN-VER$-->
    	</dependency>
    	<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>
		<!-- WebJars -->
		<dependency>
		  <groupId>org.webjars</groupId>
		  <artifactId>angularjs</artifactId>
		  <version>1.6.0</version>
		</dependency>
		<dependency>
		  <groupId>org.webjars</groupId>
		  <artifactId>bootstrap</artifactId>
		  <version>3.3.7-1</version>
		</dependency>	
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
    		<groupId>org.webjars.bower</groupId>
    		<artifactId>ng-table</artifactId>
    		<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.webjars.bower</groupId>
			<artifactId>ng-dialog</artifactId>
			<version>0.6.4</version>
		</dependency>
		<dependency>
    		<groupId>org.webjars</groupId>
    		<artifactId>jqwidgets</artifactId>
    		<version>4.4.0</version>
		</dependency>
		<dependency>
    		<groupId>org.webjars.bower</groupId>
    		<artifactId>angular-strap</artifactId>
    		<version>2.3.8</version>
		</dependency>
		<!-- End WebJars -->
		
		<!-- MariaDB drivers -->
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
    		<artifactId>mariadb-java-client</artifactId>
		</dependency>
		
		<!-- Docker -->
		<dependency>
    		<groupId>io.fabric8</groupId>
    		<artifactId>docker-maven-plugin</artifactId>
    		<version>0.19.0</version>
		</dependency>
		<!-- End Docker -->
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<addResources>true</addResources>
				</configuration>
			</plugin>
	    </plugins>
	</build>
	
	<profiles>
		<profile>
			<id>prod</id>
			<build>
				<plugins>
					<plugin>
			            <groupId>io.fabric8</groupId>
			            <artifactId>docker-maven-plugin</artifactId>
			            <version>0.19.1</version>
			            <configuration>
			            	<dockerDir>src/main/docker</dockerDir>
			            	<logDate>default</logDate>
		              		<autoPull>true</autoPull>	
		              		<images>
			            		<image>
			            			<alias>bookingdb</alias>
				                  	<name>mariadb:10.1.21</name>
				                  	<run>
				                  		<namingStrategy>alias</namingStrategy>
				                  		<env>
				                  			<MYSQL_ROOT_PASSWORD>b00king$</MYSQL_ROOT_PASSWORD>
				                  			<MYSQL_DATABASE>booking</MYSQL_DATABASE>
				                  		</env>
				                  		<net>booking-net</net>
				                  		<volumes>
				                  			<bind>
				                  				<volume>/var/storage/docker/mysql-datadir:/var/lib/mysql</volume>
				                  			</bind>
				                  		</volumes>
				                    	<wait>
				                    		<tcp>
				                    			<host>${docker.host.address}</host>
				                    			<ports>
				                    				<port>3306</port>
				                    			</ports>
				                    		</tcp>
				                      		<log>mysqld: ready for connections</log>
				                      		<time>70000</time>
				                    	</wait>
					                    <log>
					                      <prefix>DB</prefix>
					                      <color>yellow</color>
					                    </log>
				                  	</run>
			            		</image>
			            		<!-- Image holding the artifact of this build -->
			            		<image>
			            			<alias>bookingApp</alias>
		                  			<name>${project.artifactId}:${project.version}</name>
		                  			<build>
					                    <from>java:8-alpine</from>
					                    <!-- Assembly descriptor holds the reference to the created artifact-->
					                    <assembly>
					                      <!-- Normally, one would only use 'assembly.xml' if we could put the assembly descriptor
					                           into src/main/docker But this confuses the alexec plugin, so we put it into another
					                           directory and use an absolute pathe -->
					                      <descriptor>assembly.xml</descriptor>
					                    </assembly>
					                    <!-- Expose ports -->
					                    <ports>
					                      <port>8080</port>
					                    </ports>
					                    <!-- Default command for the build image -->
					                    <cmd>java -Djava.security.egd=file:/dev/./urandom -Dspring.profiles.active=prod -jar /maven/mybooking.jar</cmd>
					                </build>
					                <run>
					                	<namingStrategy>alias</namingStrategy>
					                	<!-- Assign dynamically mapped ports to maven variables (which can be reused in integration tests) -->
					                    <ports>
					                      <port>8080:8080</port>
					                    </ports>
					                    <net>booking-net</net>
					                    <wait>
					                    	<log>Started MybookingApplication</log>
					                    	<time>35000</time>
					                    </wait>
					                    <log>
					                      <prefix>Booking</prefix>
					                      <color>cyan</color>
					                    </log>
					                </run>
			            		</image>
			            	</images>
			            </configuration>
			        </plugin>
				</plugins>
			</build>
		</profile>
	</profiles>


</project>
